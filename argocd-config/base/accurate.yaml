apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: accurate
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "6"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://cybozu-go.github.io/accurate
    chart: accurate
    targetRevision: 0.2.3
    helm:
      version: v3
      values: |
        image:
          # image.repository -- Accurate image repository to use.
          repository: ghcr.io/cybozu-go/accurate

          # image.tag -- Accurate image tag to use.
          # @default -- `{{ .Chart.AppVersion }}`
          # tag:  0.3.0

          # image.pullPolicy -- Accurate image pullPolicy.
          # pullPolicy: IfNotPresent

        controller:
          # controller.replicas -- Specify the number of replicas of the controller Pod.
          replicas: 2

          # controller.resources -- Specify resources.
          resources:
            requests:
              cpu: 100m
              memory: 20Mi

          # controller.terminationGracePeriodSeconds -- Specify terminationGracePeriodSeconds.
          terminationGracePeriodSeconds: 10

          # controller.extraArgs -- Optional additional arguments.
          extraArgs: []

          config:
            # controller.config.labelKeys -- Labels to be propagated to sub-namespaces.
            # It is also possible to specify a glob pattern that can be interpreted by Go's "path.Match" func.
            ## https://pkg.go.dev/path#Match
            labelKeys:
            - team
            - development
            - pod-security.cybozu.com/policy
            - cattage.cybozu.io/tenant

            # controller.config.annotationKeys -- Annotations to be propagated to sub-namespaces.
            # It is also possible to specify a glob pattern that can be interpreted by Go's "path.Match" func.
            ## https://pkg.go.dev/path#Match
            annotationKeys:
            - tenet.cybozu.io/network-policy-template
            # An example to propagate an annotation for MetalLB
            # https://metallb.universe.tf/usage/#requesting-specific-ips
            # - metallb.universe.tf/address-pool

            # controller.config.subNamespaceLabelKeys -- Labels to be propagated to sub-namespaces from SubNamespace resource.
            # It is also possible to specify a glob pattern that can be interpreted by Go's "path.Match" func.
            # https://pkg.go.dev/path#Match
            subNamespaceLabelKeys:
            - cybozu.com/alert-group
            # - app

            # controller.config.subNamespaceAnnotationKeys -- Annotations to be propagated to sub-namespaces from SubNamespace resource.
            # It is also possible to specify a glob pattern that can be interpreted by Go's "path.Match" func.
            # https://pkg.go.dev/path#Match
            subNamespaceAnnotationKeys: []
            # - foo.bar/baz

            # controller.config.watches -- List of GVK for namespace-scoped resources that can be propagated.
            # Any namespace-scoped resource is allowed.
            watches:
              - group: rbac.authorization.k8s.io
                version: v1
                kind: Role
              - group: rbac.authorization.k8s.io
                version: v1
                kind: RoleBinding
              - version: v1
                kind: Secret
              - version: v1
                kind: ResourceQuota

            # controller.config.namingPolicies -- List of nameing policy for SubNamespaces.
            # root and match are both regular expressions.
            # When a SubNamespace is created in a tree starting from a root namespace and the root namespace's name matches the "root" regular expression, the SubNamespace name is validated with the "match" regular expression.
            #
            # "match" namingPolicies can use variables of regexp capture group naming of "root" namingPolicies.
            # example:
            #   root: ^app-(?P<team>.*)
            #   match: ^app-${team}-.*
            #   root namespace: app-team1
            #   compiled match naming policy: ^app-team1-.*
            # This feature is provided using https://pkg.go.dev/regexp#Regexp.Expand
            namingPolicies:
               - root:  ^dev-.*
                 match: ^dev-.*
            #   - root:  ^app-.*
            #     match: ^app-.*
            #   - root:  foo
            #     match: foo_.*
            #   - root:  bar
            #     match: bar_.*
            #   - root:  ^app-(?P<team>.*)
            #     match: ^app-${team}-.*

          additionalRBAC:
            # controller.additionalRBAC.rules -- Specify the RBAC rules to be added to the controller.
            # ClusterRole and ClusterRoleBinding are created with the names `{{ release name }}-additional-resources`.
            # The rules defined here will be used for the ClusterRole rules.
            rules:
              - apiGroups:
                  - ""
                resources:
                  - resourcequotas
                verbs:
                  - get
                  - list
                  - watch
                  - create
                  - update
                  - patch
                  - delete
  destination:
    server: https://kubernetes.default.svc
    namespace: accurate
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
