version: 2.1
commands:
  boot-dctest:
    description: "datacenter test"
    steps:
      - run:
          name: Checkout Neco
          command: |
            git clone --depth 1 https://github.com/cybozu-go/neco -b release
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Store secrets
          command: |
            echo "$QUAY_PASSWORD" > neco/secrets
      - run:
          name: Store github-token
          command: |
            echo "$NECO_GITHUB_TOKEN" > neco/github-token
      - run:
          name: Watch all pod logs
          command: |
            cd neco
            ./bin/watch_podlogs
          background: true
      - run:
          command: |
            cd neco
            sed -i 's/^trap/#trap/' bin/run-dctest-release.sh
            ./bin/run-dctest-release.sh bootstrap
          no_output_timeout: 20m

jobs:
  test:
    docker:
      - image: quay.io/cybozu/golang:1.12-bionic
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            cd test
            make setup SUDO=
      - run: |
          cd test
          make test

  bootstrap:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - boot-dctest
      - run:
          name: Test neco-apps
          command: |
            export NECO_DIR=$(pwd)/neco
            ./bin/run-test.sh
          no_output_timeout: 20m
      - run:
          name: Remove instance
          command: |
            cd neco
            . bin/env
            $GCLOUD compute instances delete $INSTANCE_NAME --zone $ZONE

  upgrade-master:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - boot-dctest
      - run:
          name: Bootstrap neco-apps at master
          command: |
            export NECO_DIR=$(pwd)/neco
            TARGET=test-upgrade ./bin/run-test.sh
          no_output_timeout: 20m
      - run:
          name: Remove instance
          command: |
            cd neco
            . bin/env
            $GCLOUD compute instances delete $INSTANCE_NAME --zone $ZONE

  upgrade-release:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - boot-dctest
      - run:
          name: Bootstrap neco-apps at master
          command: |
            export NECO_DIR=$(pwd)/neco
            TARGET=test-upgrade ./bin/run-test.sh
          no_output_timeout: 20m
      - run:
          name: Remove instance
          command: |
            cd neco
            . bin/env
            $GCLOUD compute instances delete $INSTANCE_NAME --zone $ZONE

  create-pull-request:
    docker:
      - image: quay.io/cybozu/ubuntu-dev:18.04
    steps:
      - checkout
      - run:
          name: Install hub command
          command: |
            curl -sSLf https://github.com/github/hub/releases/download/v2.8.3/hub-linux-amd64-2.8.3.tgz | \
            tar zxf - --strip-components=1 -C /tmp/ && \
            mv /tmp/bin/hub /usr/local/bin/hub
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "neco@cybozu.com"
            git config --global user.name "cybozu-neco"
      - add_ssh_keys:
          fingerprints:
            - "ea:f2:f4:11:35:3f:87:04:bb:c4:84:50:ba:64:a1:5d"
      - run:
          name: Create a branch with the tag
          command: |
            git fetch -t origin
            git checkout -b op-${CIRCLE_TAG} origin/release
            git merge ${CIRCLE_TAG}
            git push git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git op-${CIRCLE_TAG}:op-${CIRCLE_TAG}
      - run:
          name: Create a pull request
          command: |
            hub pull-request --message="[CI] Release ${CIRCLE_TAG}" --base=cybozu-go:release --head=cybozu-go:op-${CIRCLE_TAG}

workflows:
  version: 2
  main:
    jobs:
      - test
      - bootstrap:
          filters:
            branches:
              ignore: ["master", "release"]
      - upgrade-master:
          filters:
            branches:
              ignore: ["master", "release"]
      - upgrade-release:
          filters:
            branches:
              ignore: ["master", "release"]

  production-release:
    jobs:
      - create-pull-request:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
