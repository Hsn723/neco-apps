version: 2.1
executors:
  gcloud:
    docker:
      - image: google/cloud-sdk
    environment:
      PROJECT: neco-test
      ZONE: asia-northeast1-c
      MACHINE_TYPE: n1-highcpu-64
      IMAGE: vmx-enabled
      DISK_SIZE: 20GB

commands:
  store-service-account:
    steps:
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json

  delete-instance-at-night:
    parameters:
      branch:
        type: string
    steps:
      - run:
          name: Delete instance if current time is after 21:00 JST
          command: |
            now=$(date +%s)
            end=$(date --date="12:00" +%s)
            if [ "$now" -lt "$end" ]; then
                exit 0
            fi
            gcloud compute instances delete neco-apps-<< parameters.branch >> --quiet --project ${PROJECT} --zone ${ZONE}

  start-neco-apps-master:
    steps:
      - checkout
      - store-service-account
      - run:
          name: Wait for previous builds
          command: |
            apt-get update
            apt-get install -y --no-install-recommends jq
            ./bin/wait-for-previous-builds.sh --job start-neco-apps-master
      - run:
          name: (Re)Create instance
          no_output_timeout: 30m
          command: |
            INSTANCE_NAME=neco-apps-master
            if gcloud compute ssh cybozu@${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE} --command="test -f /tmp/setup-done"; then
                exit 0
            fi
            gcloud compute instances delete ${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE} || true
            gcloud compute instances create ${INSTANCE_NAME} \
                --project ${PROJECT} \
                --zone ${ZONE} \
                --machine-type ${MACHINE_TYPE} \
                --image ${IMAGE} \
                --boot-disk-type pd-ssd \
                --boot-disk-size ${DISK_SIZE} \
                --local-ssd interface=scsi \
                --scopes https://www.googleapis.com/auth/devstorage.read_write
            for i in $(seq 300); do
                if gcloud compute ssh cybozu@${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE} --command=date 2>/dev/null; then
                    break
                fi
                sleep 1
            done
            gcloud compute scp ./bin/run.sh cybozu@${INSTANCE_NAME}: --quiet --project ${PROJECT} --zone ${ZONE}
            gcloud compute ssh cybozu@${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE} \
                --command="sudo /home/cybozu/run.sh"
      - run:
          name: Delete instance
          command: |
            INSTANCE_NAME=neco-apps-master
            gcloud compute instances delete ${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE}
          when: on_fail

  start-neco-apps-release:
    steps:
      - checkout
      - store-service-account
      - run:
          name: Wait for previous builds
          command: |
            apt-get update
            apt-get install -y --no-install-recommends jq
            ./bin/wait-for-previous-builds.sh --job start-neco-apps-release
      - run:
          name: (Re)Create instance
          no_output_timeout: 30m
          command: |
            INSTANCE_NAME=neco-apps-release
            if gcloud compute ssh cybozu@${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE} --command="test -f /tmp/setup-done"; then
                exit 0
            fi
            gcloud compute instances delete ${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE} || true
            gcloud compute instances create ${INSTANCE_NAME} \
                --project ${PROJECT} \
                --zone ${ZONE} \
                --machine-type ${MACHINE_TYPE} \
                --image ${IMAGE} \
                --boot-disk-type pd-ssd \
                --boot-disk-size ${DISK_SIZE} \
                --local-ssd interface=scsi \
                --scopes https://www.googleapis.com/auth/devstorage.read_write
            for i in $(seq 300); do
                if gcloud compute ssh cybozu@${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE} --command=date 2>/dev/null; then
                    break
                fi
                sleep 1
            done
            gcloud compute scp ./bin/run.sh cybozu@${INSTANCE_NAME}: --quiet --project ${PROJECT} --zone ${ZONE}
            gcloud compute ssh cybozu@${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE} \
                --command="sudo /home/cybozu/run.sh"
      - run:
          name: Delete instance
          command: |
            INSTANCE_NAME=neco-apps-release
            gcloud compute instances delete ${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE}
          when: on_fail

  stop-neco-apps:
    parameters:
      branch:
        type: string
    steps:
      - checkout
      - store-service-account
      - run:
          name: Delete instance
          command: |
            INSTANCE_NAME=neco-apps-<< parameters.branch >>
            gcloud compute instances delete ${INSTANCE_NAME} --quiet --project ${PROJECT} --zone ${ZONE}

  test-neco-apps-master:
    steps:
      - checkout
      - store-service-account
      - run:
          name: Wait for previous builds
          command: |
            apt-get update
            apt-get install -y --no-install-recommends jq
            ./bin/wait-for-previous-builds.sh --job test-neco-apps-master
      - run:
          command: |
            ./bin/watch_podlogs
          environment:
            INSTANCE_NAME: neco-apps-master
          background: true
      - run:
          command: |
            ./bin/run-test.sh master
          no_output_timeout: 30m
      - run:
          name: Clean up SSH keys generated by `gcloud compute`
          command: |
            gcloud --quiet --project ${PROJECT} compute project-info remove-metadata --keys=ssh-keys
      - delete-instance-at-night:
          branch: master

  test-neco-apps-release:
    steps:
      - checkout
      - store-service-account
      - run:
          name: Wait for previous builds
          command: |
            apt-get update
            apt-get install -y --no-install-recommends jq
            ./bin/wait-for-previous-builds.sh --job test-neco-apps-release
      - run:
          command: |
            ./bin/watch_podlogs
          environment:
            INSTANCE_NAME: neco-apps-master
          background: true
      - run:
          command: |
            ./bin/run-test.sh release
          no_output_timeout: 30m
      - run:
          name: Clean up SSH keys generated by `gcloud compute`
          command: |
            gcloud --quiet --project ${PROJECT} compute project-info remove-metadata --keys=ssh-keys
      - delete-instance-at-night:
          branch: release

jobs:
  test-master:
    executor: gcloud
    steps:
      - start-neco-apps-master
      - test-neco-apps-master

  test-release:
    executor: gcloud
    steps:
      - start-neco-apps-release
      - test-neco-apps-release

  auto-shutdown:
    executor: gcloud
    steps:
      - stop-neco-apps:
          branch: master
      - stop-neco-apps:
          branch: release

  create-pull-request:
    docker:
      - image: quay.io/cybozu/ubuntu-dev:18.04
    steps:
      - checkout
      - run:
          name: Install hub command
          command: |
            curl -sSLf https://github.com/github/hub/releases/download/v2.8.3/hub-linux-amd64-2.8.3.tgz | \
            tar zxf - --strip-components=1 -C /tmp/ && \
            mv /tmp/bin/hub /usr/local/bin/hub
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "neco@cybozu.com"
            git config --global user.name "cybozu-neco"
      - add_ssh_keys:
          fingerprints:
            - "ea:f2:f4:11:35:3f:87:04:bb:c4:84:50:ba:64:a1:5d"
      - run:
          name: Create a branch with the tag
          command: |
            git checkout -b op-${CIRCLE_TAG} ${CIRCLE_TAG}
            git push git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git op-${CIRCLE_TAG}
      - run:
          name: Create a pull request
          command: |
            hub pull-request --message="[CI] Release ${CIRCLE_TAG}" --base=cybozu-go:release --head=cybozu-go:op-${CIRCLE_TAG}

workflows:
  version: 2
  main:
    jobs:
      - test-master
      - test-release

  auto-shutdown:
    triggers:
      - schedule:
          cron: "0 12 * * 1-5"
          filters:
            branches:
              only: master
    jobs:
      - auto-shutdown

  production-release:
    jobs:
      - create-pull-request:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
