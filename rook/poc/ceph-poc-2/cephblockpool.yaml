apiVersion: ceph.rook.io/v1
kind: CephBlockPool
metadata:
  name: ceph-poc-2-block-pool-hdd
  namespace: ceph-poc-2
  annotations:
    # CephBlockPool depends CephCluster, so that it should be created after CephCluster
    argocd.argoproj.io/sync-wave: "1"
spec:
  deviceClass: "hdd"
  failureDomain: zone
  replicated:
    size: 3
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ceph-poc-2-block-hdd
  annotations:
    # StorageClass is referred by Rook, so that it should be created before Rook
    argocd.argoproj.io/sync-wave: "-1"
    resize.topolvm.io/enabled: "true"
# Change "rook-ceph" provisioner prefix to match the operator namespace if needed
provisioner: ceph-poc-2.rbd.csi.ceph.com
parameters:
  # clusterID is the namespace where the rook cluster is running
  clusterID: ceph-poc-2
  # Ceph pool into which the RBD image shall be created
  pool: ceph-poc-2-block-pool-hdd

  # RBD image format. Defaults to "2".
  imageFormat: "2"

  # RBD image features. Available for imageFormat: "2". CSI RBD currently supports only `layering` feature.
  imageFeatures: layering

  # The secrets contain Ceph admin credentials.
  csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
  csi.storage.k8s.io/provisioner-secret-namespace: ceph-poc-2
  csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
  csi.storage.k8s.io/controller-expand-secret-namespace: ceph-poc-2
  csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
  csi.storage.k8s.io/node-stage-secret-namespace: ceph-poc-2

  # Specify the filesystem type of the volume. If not specified, csi-provisioner
  # will set default as `ext4`.
  csi.storage.k8s.io/fstype: ext4

allowVolumeExpansion: true
# Delete the rbd volume when a PVC is deleted
reclaimPolicy: Delete
---
apiVersion: ceph.rook.io/v1
kind: CephBlockPool
metadata:
  name: ceph-poc-2-block-pool-ssd
  namespace: ceph-poc-2
  annotations:
    # CephBlockPool depends CephCluster, so that it should be created after CephCluster
    argocd.argoproj.io/sync-wave: "1"
spec:
  deviceClass: "ssd"
  failureDomain: zone
  replicated:
    size: 3
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ceph-poc-2-block-ssd
  annotations:
    # StorageClass is referred by Rook, so that it should be created before Rook
    argocd.argoproj.io/sync-wave: "-1"
    resize.topolvm.io/enabled: "true"
# Change "rook-ceph" provisioner prefix to match the operator namespace if needed
provisioner: ceph-poc-2.rbd.csi.ceph.com
parameters:
  # clusterID is the namespace where the rook cluster is running
  clusterID: ceph-poc-2
  # Ceph pool into which the RBD image shall be created
  pool: ceph-poc-2-block-pool-ssd

  # RBD image format. Defaults to "2".
  imageFormat: "2"

  # RBD image features. Available for imageFormat: "2". CSI RBD currently supports only `layering` feature.
  imageFeatures: layering

  # The secrets contain Ceph admin credentials.
  csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
  csi.storage.k8s.io/provisioner-secret-namespace: ceph-poc-2
  csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
  csi.storage.k8s.io/controller-expand-secret-namespace: ceph-poc-2
  csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
  csi.storage.k8s.io/node-stage-secret-namespace: ceph-poc-2

  # Specify the filesystem type of the volume. If not specified, csi-provisioner
  # will set default as `ext4`.
  csi.storage.k8s.io/fstype: ext4

allowVolumeExpansion: true
# Delete the rbd volume when a PVC is deleted
reclaimPolicy: Delete
